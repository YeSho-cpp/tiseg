dataset_type = 'NucleiMoNuSegDataset'
data_root = 'data/monuseg'
process_cfg = dict(
    if_flip=True,
    if_jitter=True,
    if_elastic=True,
    if_blur=True,
    if_crop=True,
    if_pad=True,
    if_norm=False,
    with_dir=True,
    min_size=256,
    max_size=2048,
    resize_mode='fix',
    edge_id=2,
    to_center=False,
    num_angles=8)
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=16,
    train=dict(
        type='NucleiMoNuSegDataset',
        data_root='data/monuseg',
        img_dir='train/c300',
        ann_dir='train/c300',
        split='only-train_t12_v4_train_c300.txt',
        process_cfg=dict(
            if_flip=True,
            if_jitter=True,
            if_elastic=True,
            if_blur=True,
            if_crop=True,
            if_pad=True,
            if_norm=False,
            with_dir=True,
            min_size=256,
            max_size=2048,
            resize_mode='fix',
            edge_id=2,
            to_center=False,
            num_angles=8)),
    val=dict(
        type='NucleiMoNuSegDataset',
        data_root='data/monuseg',
        img_dir='train/c0',
        ann_dir='train/c0',
        split='only-train_t12_v4_test_c0.txt',
        process_cfg=dict(
            if_flip=True,
            if_jitter=True,
            if_elastic=True,
            if_blur=True,
            if_crop=True,
            if_pad=True,
            if_norm=False,
            with_dir=True,
            min_size=256,
            max_size=2048,
            resize_mode='fix',
            edge_id=2,
            to_center=False,
            num_angles=8)),
    test=dict(
        type='NucleiMoNuSegDataset',
        data_root='data/monuseg',
        img_dir='train/c0',
        ann_dir='train/c0',
        split='only-train_t12_v4_test_c0.txt',
        process_cfg=dict(
            if_flip=True,
            if_jitter=True,
            if_elastic=True,
            if_blur=True,
            if_crop=True,
            if_pad=True,
            if_norm=False,
            with_dir=True,
            min_size=256,
            max_size=2048,
            resize_mode='fix',
            edge_id=2,
            to_center=False,
            num_angles=8)))
log_config = dict(
    interval=10,
    hooks=[
        dict(type='TextLoggerHook', by_epoch=False),
        dict(type='TensorboardLoggerHook')
    ])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
num_angles = 8
runner = dict(type='IterBasedRunner', max_iters=5000)
evaluation = dict(
    interval=200,
    eval_start=0,
    epoch_iter=12,
    max_iters=5000,
    last_epoch_num=5,
    metric='all',
    save_best='mAji',
    rule='greater')
checkpoint_config = dict(by_epoch=False, interval=200, max_keep_ckpts=1)
optimizer = dict(type='Adam', lr=0.0005, weight_decay=0.0005)
optimizer_config = dict()
lr_config = dict(
    policy='fixed',
    warmup=None,
    warmup_iters=100,
    warmup_ratio=1e-06,
    by_epoch=False)
model = dict(
    type='MultiTaskCDNetSegmentorNoPoint',
    num_classes=2,
    train_cfg=dict(
        if_weighted_loss=False, noau=True, parallel=True, num_angles=8),
    test_cfg=dict(
        mode='split',
        plane_size=(256, 256),
        crop_size=(256, 256),
        overlap_size=(80, 80),
        if_ddm=False,
        if_mudslide=False,
        rotate_degrees=[0, 90],
        flip_directions=['none', 'horizontal', 'vertical', 'diagonal']))
work_dir = './work_dirs_seed2022/multi_task_cdnet_no_point/monuseg/multi_task_cdnet_no_point_vgg16_adam-lr5e-4_bs16_256x256_5k_monuseg_noau_toridge_8angles_parallel'
gpu_ids = range(0, 1)
